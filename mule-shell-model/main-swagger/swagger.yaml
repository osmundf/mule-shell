swagger: '2.0'
info:
  title: Mule Shell API
  version: "1.0.0"
# the domain of the service
host: com.stackoverflow
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /
consumes:
  - application/json
produces:
  - application/json
paths:
  /account/login:
    post:
      operationId: login
      summary: 'Login point.'
      parameters:
        - name: authorization
          in: header
          type: array
          items:
            $ref: JsonString
      responses:
        200:
          summary: 'Successful login'
          schema:
            $ref: JsonWebToken
        401:
          summary: 'Unauthorized login attempt'
          schema:
            $ref: JsonWebToken

  /account/logout:
    post:
      summary: 'Logout point.'
      operationId: logout
      parameters:
        - name: body
          description: BasicAccount
          in: body
          schema:
            $ref: '#/definitions/BasicAccount'
          required: true
      responses:
        200:
          summary: 'Successful logout'
          type: string
        401:
          summary: 'Unauthorized logout attempt'

  /session:
    get:
      operationId: newSession
      responses:
        200:
          schema:
            type: object
            $ref: '#/definitions/Session'

  /session/{id}:
    get:
      operationId: getSession
      parameters:
        - name: id
          in: path
          type: string
        - name: tz
          in: query
          type: string
          required: false
      responses:
        200:
          schema:
            type: object
            $ref: '#/definitions/Session'
        401:
          summary: 'Unauthorized session retrieval'

  /session/snippet:
    get:
      operationId: getSessionSnippetArray
      description: Retrieves all the snippets for the session.
      parameters:
        - name: sessionId
          in: query
          type: string
          required: true
      responses:
        200:
          summary: 'Successfully retrieved all session snippets.'
          schema:
            type: array
            $ref: '#/definitions/Snippet'

  /session/import:
    get:
      operationId: getSessionImportArray
      description: Retrieves the import snippets for the session.
      parameters:
        - name: sessionId
          in: query
          type: string
          required: true
      responses:
        200:
          summary: 'Successfully retrieved all session snippets.'
          schema:
            type: array
            $ref: '#/definitions/ImportSnippet'

  /session/variable:
    get:
      operationId: getSessionVariableArray
      description: Retrieves the variable snippets for the session.
      parameters:
        - name: sessionId
          in: query
          type: string
          required: true
      responses:
        200:
          summary: 'Successfully retrieved all session snippets.'
          schema:
            type: array
            $ref: '#/definitions/VariableSnippet'

  /session/method:
    get:
      operationId: getSessionMethodArray
      description: Retrieves the method snippets for the session.
      parameters:
        - name: sessionId
          in: query
          type: string
          required: true
      responses:
        200:
          summary: 'Successfully retrieved all session snippets.'
          schema:
            type: array
            $ref: '#/definitions/MethodSnippet'

  /expression:
    post:
      operationId: postExpression
      parameters:
        - name: sessionId
          in: query
          type: string
          required: true
        - name: expression
          description: Expression
          in: body
          schema:
            $ref: '#/definitions/Expression'
          required: false
        - name: expressionType
          in: query
          type: string
          default: 'expression'
          required: true
      responses:
        200:
          description:
          schema:
            $ref: '#/definitions/ExpressionResult'

definitions:
  JsonString:
    type: string

  JsonWebToken:
    type: string

  BasicAccount:
    type: object
    description: 'BasicAccount'
    properties:
      sessionId:
        type: string
      username:
        type: string

  Role:
    type: string
    enum:
      - admin
      - client
      - register
      - system

  AccountRole:
    type: object
    properties:
      account:
        schema: '#/definitions/BasicAccount'
      role:
        schmea: '#/definitions/Role'

  Expression:
    type: object
    properties:
      input:
        type: string
      output:
        type: string

  ExpressionResult:
    type: object
    properties:
      input:
        type: string
      output:
        type: string

  Session:
    type: object
    properties:
      id:
        type: string
        format: uuid
      createdAt:
        type: string
        format: date-time
      suspendedAt:
        type: string
        format: date-time
      closedAt:
        type: string
        format: date-time

  Snippet:
    type: object
    description: 'Basic Snippet'
    properties:
      id:
        type: string
      index:
        type: string
      type:
        type: string
      name:
        type: string
      source:
        type: string

  ImportSnippet:
    type: object
    properties:
      id:
        type: string
      index:
        type: string
      name:
        type: string
      fullName:
        type: string
      source:
        type: string

  VariableSnippet:
    type: object
    properties:
      id:
        type: string
      index:
        type: string
      name:
        type: string
      type:
        type: string
      value:
        type: string
      source:
        type: string

  MethodSnippet:
    type: object
    properties:
      id:
        type: string
      index:
        type: string
      name:
        type: string
      type:
        type: string
      signature:
        type: string
      source:
        type: string
